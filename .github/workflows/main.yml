name: Pull Request Quality Check

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.11'

      # Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Run backend tests
      - name: Run backend tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          VERIFY_EMAIL_URL: ${{ vars.VERIFY_EMAIL_URL }}
          RESET_PASSWORD_URL: ${{ vars.RESET_PASSWORD_URL }}
          DEFAULT_ORIGIN: ${{ vars.DEFAULT_ORIGIN }}
<<<<<<< HEAD
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
          GCP_CREDENTIALS_PATH: ${{ steps.auth.outputs.credentials_file_path }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
=======
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
>>>>>>> main
        run: |
          pytest --cov=api --cov-report=xml --cov-report=html

      # Run frontend tests
      - name: Run frontend tests
        run: npm run test:coverage

      # Upload coverage reports
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            htmlcov/
            coverage/
